[romeo]
lut=AlexaV3_K1S1_LogC2Video_Rec709_EE_davinci3d.cube
delivery_template=romeo_slate_template_v001.nk
delivery_folder_win32=Z:\romeo\SHARED\outgoing\
delivery_folder=/Volumes/romeo_inhouse/romeo/SHARED/outgoing/
delivery_resolution=3272x1768
imgseq_regexp=^(?P<base>.+)\.(?P<frame>[0-9%a-z-]+)\.(?P<ext>[A-Za-z0-9]+)$
shot_regexp=(?P<shot>[0-9]{3}_(?P<sequence>[A-Z]{3})_[0-9]{4})
sequence_regexp=[A-Z]{3}
shot_regexp_ci=(?P<shot>[0-9]{3}_(?P<sequence>[A-Za-z]{3})_[0-9]{4})
sequence_regexp_ci=[A-Za-z]{3}
sequence_regexp_2=_?([A-Za-z]{3})_
filename_regexp=(?P<shot>[0-9]{3}_(?P<sequence>[A-Za-z]{3})_[0-9]{4})_(?P<element_type>[a-zA-Z]+).*VERSION_SEPARATOR(?P<version_number>[0-9]+)
temp_element_regexp=[Tt][Ee][Mm][Pp]
shot_dir=SHOW_ROOT/SEQUENCE/SHOT
shot_dir_format={show_root}{pathsep}{sequence}{pathsep}{shot}
seq_dir_format={show_root}{pathsep}{sequence}
seq_element_dir_format={show_root}{pathsep}{sequence}{pathsep}SHARED
show_element_dir={show_root}{pathsep}SHARED
# valid values are preserve, lower, or upper.
case_func=preserve
show_file_operation=copy
write_ale=yes
ale_tapename=INHOUSE_AVID
shot_scripts_dir=nuke
shot_delivery_dir=delivery
shot_comp_render_dir=img{pathsep}comp{pathsep}{compdir}
shot_script_start={shot}_comp_v500
temp_script_start={shot}_temp_v500
default_plate_width=3424
default_plate_height=2202
write_extension=exr
write_frame_format=%04d
write_fps=23.976
cdl_dir_format=data{pathsep}color
cdl_file_ext=cube
cdl_mainplate_regexp=[Pp][Ll][Aa][Tt][Ee]
mainplate_regexp=[Pp][Ll][Aa][Tt][Ee]
plate_colorspace=linear
comp_colorspace=linear
movie_colorspace=rec709
delivery_rsync_enabled=no
delivery_rsync_filetypes=mov,csv,xlsx,cdl,dpx,tif,ale
delivery_rsync_dest=/Volumes/romeo_inhouse/Vendors/InHouse/From_INH
version_separator=_v
version_start=501
version_format=%03d
win32_netpath_transforms=/Volumes/romeo_inhouse|Z:
use_plate_timecode=no
project_code=ROM
version_status_p2k=p2k
task_status_p2k=ip
shot_status_p2k=p2k
version_status_cbb=cbb
task_status_cbb=cmpt
shot_status_cbb=cbb
version_status_final=apr
task_status_final=cmpt
shot_status_final=fin
version_status_tmp=tmp
task_status_tmp=cmpt
shot_status_tmp=tmp
version_status_notes=rrq
task_status_notes=rrq
shot_status_notes=ip
seq_stub_dir={show_root}{pathsep}SHARED{pathsep}romeo{pathsep}lib{pathsep}seq_stub
shot_stub_dir={show_root}{pathsep}SHARED{pathsep}romeo{pathsep}lib{pathsep}shot_stub
default_cc_darwin=/Volumes/romeo_inhouse/romeo/SHARED/lib/nuke/pipeline/default.cube
default_cc_linux2=/Volumes/romeo_inhouse/romeo/SHARED/lib/nuke/pipeline/default.cube
default_cc_win32=Z:\romeo\SHARED\lib\nuke\pipeline\default.cube
# switch this from NO to YES in order to use a lin2logc conversion
use_lin2logc=YES
generic_lin2logc_darwin=/Volumes/romeo_inhouse/romeo/SHARED/lut/Linear_To_Alexa_LogC_V3.csp
generic_lin2logc_linux2=/Volumes/romeo_inhouse/romeo/SHARED/lut/Linear_To_Alexa_LogC_V3.csp
generic_lin2logc_win32=Z:\romeo\SHARED\lut\Linear_To_Alexa_LogC_V3.csp
# Luma pictures Nuke Gizmos
custom_gizmo_location_darwin=/Volumes/romeo_inhouse/romeo/SHARED/lib/nuke/gizmos/luma
custom_gizmo_location_linux2=/Volumes/romeo_inhouse/romeo/SHARED/lib/nuke/gizmos/luma
custom_gizmo_location_win32=Z:\romeo\SHARED\lib\nuke\gizmos\luma
[color]
lin_to_log_lut_path_darwin=/Volumes/romeo_inhouse/romeo/SHARED/lut/Linear_To_Alexa_LogC_V3.csp
lin_to_log_lut_path_linux2=/Volumes/romeo_inhouse/romeo/SHARED/lut/Linear_To_Alexa_LogC_V3.csp
lin_to_log_lut_path_win32=Z:\romeo\SHARED\lut\Linear_To_Alexa_LogC_V3.csp
display_lut_path_darwin=/Volumes/romeo_inhouse/romeo/SHARED/lut/RomeoCV_Rec709.cube
display_lut_path_linux2=/Volumes/romeo_inhouse/romeo/SHARED/lut/RomeoCV_Rec709.cube
display_lut_path_win32=Z:\romeo\SHARED\lut\RomeoCV_Rec709.cube
use_lin_to_log_lut=Yes
use_display_lut=No
shot_lut_file_ext=cube
shot_lut_file_path_darwin=/Volumes/romeo_inhouse/romeo/{sequence}/{shot}/data/color/{shot}.{ext}
shot_lut_file_path_linux2=/Volumes/romeo_inhouse/romeo/{sequence}/{shot}/data/color/{shot}.{ext}
shot_lut_file_path_win32=Z:\romeo\{sequence}\{shot}\data\color\{shot}.{ext}
lin_to_log_lut_exts=exr
shot_lut_exts=exr,dpx
rvsdi_hosts=
[delivery]
render_delivery_options=Standard Delivery:cc,avidqt,vfxqt,burnin,hires,export|Temp Delivery:avidqt,vfxqt,burnin,export|Matte Delivery:matte
publish_delivery_cmd_darwin=/Volumes/romeo_inhouse/romeo/SHARED/bin/publish_delivery.py --gui --playlistonly
publish_delivery_cmd_linux2=/Volumes/romeo_inhouse/romeo/SHARED/bin/publish_delivery.py --gui --playlistonly
publish_delivery_cmd_win32=Z:\romeo\SHARED\bin\publish_delivery.py --gui --playlistonly
publish_delivery_menu_commands=Hi-Res Package|--combined,Quicktime Package|,Matte Package|--matte
version_status_qt=rev
version_status_2k=p2k
nuke_template_darwin=/Volumes/romeo_inhouse/romeo/SHARED/romeo/lib/nuke/delivery/romeo_slate_template_v001.nk
nuke_template_linux2=/Volumes/romeo_inhouse/romeo/SHARED/romeo/lib/nuke/delivery/romeo_slate_template_v001.nk
nuke_template_win32=Z:\romeo\SHARED\romeo\lib\nuke\delivery\romeo_slate_template_v001.nk
# to add date groupings into folder, use the tokens {date_group} and {date_sub_group}. format strings are defined below.
package_folder_darwin=/Volumes/romeo_primary/_IO/INH/From_INH/
package_folder_linux2=/Volumes/romeo_primary/_IO/INH/From_INH/
package_folder_win32=Y:\_IO\INH\From_INH\
playlist_age_days=30
internal_approval_status=iapr
timecode_nodes=
upload_movie=Yes
colorspace_nodes=OCIOColorSpace1
#cdl_nodes=OCIOCDLTransform1,OCIOCDLTransform2
cdl_nodes=
lut_nodes=
shot_lut_nodes=OCIOFileTransform1
other_cc_nodes=LIVEGRAIN_Texture_Mapping1
exr_read_node=EXR_READ
avid_write_node=MOV_DNXHD_WRITE
vfx_write_node=MOV_VFX_WRITE
export_write_node=MOV_VFX_EXPORT_WRITE
hires_write_node=EXR_WRITE
matte_write_node=TIFF_MATTE_WRITE
file_format=exr
matte_file_format=tif
client_version_format={shot}_{element_type}{version_separator}{version_number}
subform_lineperfile=no
vendor_code=INH
vendor_name=Romeo In-House
date_group_format=%y%m
date_sub_group_format=%y%m%d
fields_to_uppercase=lores_ext,hires_ext
# set to 0 if you want to use date-specific serial numbers, and set the format to %02d
# for an alphabetical serial, use the '@' symbol, first serial will start with A
serial_start=@
use_alphabetical_serial=Yes
use_global_serial=No
serial_format=%03d
date_format=%Y%m%d
hires_delivery_type=EXR
lores_delivery_type=MOV
combined_delivery_type=EXR
matte_delivery_type=TIF
# valid substitutions for package_directory and batch_id: {vendor_code}, {project_code}, {date}, {serial}, {delivery_type}
package_directory=From_{vendor_code}_{date}_{serial}
package_directory_regexp=From_(?P<vendor_code>[A-Z]{3})_(?P<date>[0-9]{8})_(?P<serial>[A-Z]{1})
element_type_regexp=^(?P<shot>[0-9]{3}_(?P<sequence>[A-Za-z]{3})_[0-9]{4})_(?P<element_type>[0-9A-Za-z_-]+)_v(?P<version>[0-9]+)$
batch_id={serial}
client_version={shot}_{element_type}{version_separator}{version_number}
avidqt_dest=avid{pathsep}{client_version}.{avidqtext}
vfxqt_dest=vfx{pathsep}{client_version}_vfx.{vfxqtext}
exportqt_dest=export{pathsep}{client_version}_export.{exportqtext}
hires_dest={client_version}{pathsep}{format}{pathsep}{client_version}.{frame}.{hiresext}
matte_dest={client_version}_matte{pathsep}{format}{pathsep}{client_version}_matte.{frame}.{matteext}
cc_deliver=yes
cc_filetype=cube
cc_dest=support_files{pathsep}{client_version}.cube
subform_date_format=%m/%d/%Y
subform_file_format=xlsx
subform_boolean_true=X
subform_boolean_false=
client_filename={client_version}
client_matte_filename={client_version}_matte
lores_subreason=For Temp
hires_subreason=For Final
matte_subreason=DI Matte
subform_filename_format={package}_Submission.{ext}
subform_hardcode_items=hc_shot_status|WIP
subform_excel_header_format=bold|True,font_color|white,bg_color|black,align|center,valign|vcenter
subform_excel_data_format=align|center,valign|vcenter
subform_translate=Vendor|vendor_code,Submission Date|subdate,Submission Type|subreason,Shot/Asset|client_filename,Shot Status|hc_shot_status,Submission Notes|notes,ProRes|b_vfxqt,DNxHD|b_avidqt,EXR|b_hires,TIFF|b_matte,Comp Start Frame|start_frame,Comp End Frame|end_frame,Duration|duration,Submission Doc|subfilename
db_delivered_status=dlvr
sync_email_cmd_linux2=/Volumes/romeo_inhouse/romeo/SHARED/bin/sync_and_send_email.py
sync_email_cmd_darwin=/Volumes/romeo_inhouse/romeo/SHARED/bin/sync_and_send_email.py
sync_email_cmd_win32=Z:\romeo\SHARED\bin\sync_and_send_email.py
[thumbnails]
template_darwin=/Volumes/romeo_inhouse/romeo/SHARED/romeo/lib/nuke/pipeline/romeo_thumb_template_v001.nk
template_linux2=/Volumes/romeo_inhouse/romeo/SHARED/romeo/lib/nuke/pipeline/romeo_thumb_template_v001.nk
template_win32=Z:\romeo\SHARED\romeo\lib\nuke\pipeline\romeo_thumb_template_v001.nk
template_movie_darwin=/Volumes/romeo_inhouse/romeo/SHARED/romeo\lib/nuke/pipeline/romeo_qt_thumb_template_v001.nk
template_movie_linux2=/Volumes/romeo_inhouse/romeo/SHARED/romeo\lib/nuke/pipeline/romeo_qt_thumb_template_v001.nk
template_movie_win32=Z:\romeo\SHARED\romeo\lib\nuke\pipeline\romeo_qt_thumb_template_v001.nk
shot_thumb_dir=data{pathsep}thumbnails
colorspace_node=OCIOColorSpace1
cdl_node=
lut_node=OCIOFileTransform1
[shot_template]
darwin=/Volumes/romeo_inhouse/romeo/SHARED/romeo/lib/nuke/pipeline/romeo_shot_template_v000.nk
linux2=/Volumes/romeo_inhouse/romeo/SHARED/romeo/lib/nuke/pipeline/romeo_shot_template_v000.nk
win32=Z:\romeo\SHARED\romeo\lib\nuke\pipeline\romeo_shot_template_v000.nk
temp_darwin=/Volumes/romeo_inhouse/romeo/SHARED/romeo/lib/nuke/pipeline/romeo_temp_shot_template_v000.nk
temp_linux2=/Volumes/romeo_inhouse/romeo/SHARED/romeo/lib/nuke/pipeline/romeo_temp_shot_template_v000.nk
temp_win32=Z:\romeo\SHARED\romeo\lib\nuke\pipeline\romeo_temp_shot_template_v000.nk
backdrop_node=BackdropNode1
backdrop_node_write=BackdropNode2
main_read_node=Read1
main_write_node=Write_exr
viewer_cc_node=VIEWER_INPUT.OCIOFileTransform1
[show_root]
darwin=/Volumes/romeo_inhouse/romeo
linux2=/Volumes/romeo_inhouse/romeo
win32=Z:\romeo
[shared_root]
darwin=/Volumes/romeo_inhouse/romeo/SHARED
linux2=/Volumes/romeo_inhouse/romeo/SHARED
win32=Z:\romeo
[email]
credentials_dir={shared_root}{pathsep}lib{pathsep}credentials
client_secret=client_secret.json
gmail_creds=gmail-python-email-send.json
gmail_scopes=https://www.googleapis.com/auth/gmail.send
application_name=In-House Pipeline
# distro_list_to="Ana Marie Cruz" <amcruz@mac.com>
# distro_list_cc="Jason Sacharoff" <jsacharoff@gmail.com>, "Hunter Kuhnert" <hunterchasemedia@gmail.com>, "Ned Wilson" <ned@n3d.org>#
distro_list_to="Ned Wilson" <ned@n3d.org>
distro_list_cc=
# valid tokens for email: {shot_count} {delivery_folder} {package} {shot_list}
email_text=Hello Kris,\r
    \r
    The following {shot_count} shot(s) are ready for you and will be uploaded to Aspera as package {package}:\r
    \r
    {shot_list}\r
    \r
    Enjoy!\r
    \r
    -n\r
    
mail_from=inhousevfx@romeovfx.com
subject=In-House Submission: {package}
[nuke]
version=11.3v1
studio=yes
[nuke_exe_path]
darwin=/Applications/Nuke11.3v1/Nuke11.3v1.app/Contents/MacOS/Nuke11.3v1
win32=C:\Program Files\Nuke11.3v1\Nuke11.3.exe
linux2=/usr/local/Nuke11.3v1/Nuke11.3
[shot_structure]
nukescript_dir=nuke
plate_dir=img{pathsep}plates
precomp_dir=img{pathsep}precomp
rendercomp_dir=img{pathsep}comp
element_dir=img{pathsep}elements
renderelem_dir=img{pathsep}renders
mograph_dir=img{pathsep}mograph
ref_dir=ref
[database]
python_class=ShotgunDBAccess
shotgun_api_key=aCzrm1eywtfhhgrvmqsd%eerb
shotgun_script_name=romeo_api_access
shotgun_server_path=https://romeo.shotgunstudio.com
shotgun_project_id=106
shotgun_task_template=Romeo Task Template
shotgun_temp_pipeline_step_id=66
shotgun_comp_pipeline_step_id=67
plates_entity=CustomEntity13
plates_slate_field=sg_slate_1
plates_scene_field=sg_scene_1
[note_ingest]
supported_filetypes=.xlsx
# next three key/value pairs are internal name equal to the column header value provided by the client in the spreadsheet
shot_name=Shotname
version_name=Filename
note_body=Director 2K Feedback
# all of the search and replace operations you want to do on the version name to get it to be recognized in the database.
# each substitution is separated by a comma, and from and to are separated by pipes.
version_name_transforms=.exr|,_v5|_(\w+)_v5,.mov|
default_note_type=Internal
# dictionary. key is text in note to match, value is function call to execute when a match is found.
note_body_triggers=final|shot_final,temp approved|temp_approved,cbb|shot_cbb
[scan_ingest]
exr_metadata_key_scene=Scene
exr_metadata_key_slate=Scene
exr_metadata_key_take=Take
exr_metadata_key_reel_name=ReelName
exr_metadata_key_camera=Camera
extract_scene_from_slate=Yes
scene_regex=[V]*[X]*(?P<prefix>[A-F]*)(?P<special>(PU|TV|R)*)(?P<number>[0-9]{1,3})
scene_number_format=%03d
extract_take_from_metadata=Yes
scene_format={prefix}{number}{special}
take_format={slate}-{take}{camera}
lowercase_camera_name=Yes
image_exts=exr,dpx,jpg,png,tif
lutted_image_exts=exr,dpx
unlutted_image_exts=jpg,png,tif
movie_exts=mov,mp4
movie_frame_offset=1000
head_in_offset=0
cut_in_offset=8
cut_out_offset=-8
tail_out_offset=0
temp_comp_task_name=Temp Comp
final_comp_task_name=Final Comp
nuke_script_creator_darwin=/Volumes/romeo_inhouse/romeo/SHARED/bin/create_nuke_script.py
nuke_script_creator_linux2=/Volumes/romeo_inhouse/romeo/SHARED/bin/create_nuke_script.py
nuke_script_creator_win32=Z:\romeo\SHARED\bin\create_nuke_script.py
# file_ignore is a comma-separated list of quoted regular expressions. all double-quote characters will have to be escaped with a backslash.
file_ignore="\..*DS_Store.*",".*\@.*"
# destination types - comma separated list of key/value pairs, separated by a pipe. element type is the key, the filesystem destination is the value.
destination_types="plate|img{pathsep}plates{pathsep}{element_name}","ref|ref","element|img{pathsep}elements{pathsep}{element_name}","count sheet|data{pathsep}count_sheets","color correction|data{pathsep}color","asset|assets","nuke script|nuke","render|img{pathsep}renders{pathsep}{element_name}","mograph|img{pathsep}mograph","matte painting|img{pathsep}dmp","still|img{pathsep}stills","misc|data{pathsep}misc"
[scan_ingest_rules]
# scan ingest rules. these are executed IN ORDER to help automate the placement on the filesystem of ingested elements.
# each rule is a comma-separated list. these values are:
# 1. the element scope - can be either show, sequence, or shot. multiple scopes separated by pipe.
# 2. the file extension - e.g. xlsx, pdf, etc. multiple extensions separated by pipe.
# 3. filename regular expression - when in doubt, leave this as .* (will match everything)
# 4. is sequence - valid as either true or false. If true, will only consider elements that are image sequences. If false, will only consider single files.
# 5. destination element type - can be any key from [scan_ingest] => destination_types above
# 6. destination element case - can be lower, upper, or preserve
# 7. destination element source pattern - regex pattern to match for source - use ^(.*)$ as default
# 8. destination element destination name - regex pattern for destination - use \1 for default
shot_plate_rule="shot","dpx|exr",".*","true","plate","preserve","^(.*)$","\1"
general_plate_rule="show|sequence","dpx|exr",".*","true","plate","preserve","^(.*)$","\1"
general_ref_dpx_rule="show|sequence","dpx",".*","false","ref","preserve","^\d+ \((\w+)\).*$","\1"
shot_ref_dpx_rule="shot","dpx",".*","false","ref","lower","^\d+ \((\w+)\).*$","\1"
general_ref_jpg_rule="show|sequence","jpg",".*","false","ref","preserve","^\d+ \((\w+)\).*$","\1"
shot_ref_jpg_rule="shot","jpg",".*","false","ref","lower","^\d+ \((\w+)\).*$","\1"
general_ref_mov_rule="show|sequence","mov|mp4",".*","false","ref","preserve","^(.*)$","\1"
shot_ref_mov_rule="shot","mov|mp4",".*","false","ref","preserve","^(.*)$","\1"
ref_count_rule="show|sequence|shot","pdf|xlsx|txt|edl",".*","false","count sheet","preserve","^(.*)$","\1"
tiff_mograph_rule="show|sequence|shot","tif|tiff",".*","false","mograph","preserve","^(.*)$","\1"
general_zip_rule="show|sequence|shot","zip",".*","false","misc","preserve","^(.*)$","\1"
general_cc_rule="show|sequence","ccc|cdl|cc|cube",".*","false","color correction","preserve","^\d+ \((\w+)\).*$","\1"
shot_cc_rule="shot","ccc|cdl|cc|cube",".*","false","color correction","preserve","^\d+ \((\w+)\).*$","\1"
